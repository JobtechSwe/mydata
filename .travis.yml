env:
  - DOCKER_COMPOSE_VERSION=1.23.2

jobs:
  include:
    # code linter
    - stage: "lint"
      name: "Code lint"
      language: node_js
      install:
        - npm run install-all
      test: skip
      script:
        - npm run lint-all

    # end-to-end tests
    - stage: "end-2-end"
      name: "End-to-end tests"
      language: node_js
      services:
        - docker
      before_install:
        - sudo rm /usr/local/bin/docker-compose
        - curl -L https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-`uname -s`-`uname -m` > docker-compose
        - chmod +x docker-compose
        - sudo mv docker-compose /usr/local/bin
      install:
        - npm run install-all
      test:
        - "npm run test:e2e"

    # build docker image(s)
    - stage: build
      install: skip
      test: skip
      services:
        - docker
      script:
        - docker login -u "$DOCKER_USER" -p "$DOCKER_PASS"
        - if [ ! -z "$TRAVIS_TAG" ]; then export TAG="$TRAVIS_TAG"; else export TAG="latest"; fi
        # Build images
        - docker build --pull -t jobtechswe/mydata-app:${TAG} --cache-from jobtechswe/mydata-app:${TAG} app/
        - docker build --pull -t jobtechswe/mydata-cv:${TAG} --cache-from jobtechswe/mydata-cv:${TAG} examples/cv/
        - docker build --pull -t jobtechswe/mydata-operator:${TAG} --cache-from jobtechswe/mydata-operator:${TAG} operator/

        # Push images to Docker Hub
        - docker push jobtechswe/mydata-cv:${TAG}
        - docker push jobtechswe/mydata-app:${TAG}
        - docker push jobtechswe/mydata-operator:${TAG}

        # If tag build, tag images as latest-tag
        - if [ ! -z "$TRAVIS_TAG" ]; then docker tag jobtechswe/mydata-cv:$TAG jobtechswe/mydata-cv:latest-tag && docker push jobtechswe/mydata-cv:latest-tag; fi
        - if [ ! -z "$TRAVIS_TAG" ]; then docker tag jobtechswe/mydata-app:$TAG jobtechswe/mydata-app:latest-tag && docker push jobtechswe/mydata-app:latest-tag; fi
        - if [ ! -z "$TRAVIS_TAG" ]; then docker tag jobtechswe/mydata-operator:$TAG jobtechswe/mydata-operator:latest-tag && docker push jobtechswe/mydata-operator:latest-tag; fi
        - docker logout

    # update openshift DeployConfig(s)
    - stage: deploy
      install:
        - mkdir -p /opt/openshift
        - wget -qO- https://github.com/openshift/origin/releases/download/v3.11.0/openshift-origin-client-tools-v3.11.0-0cbc58b-linux-64bit.tar.gz | tar xvzf - -C /opt/openshift --strip-components=1
        - export PATH=$PATH:/opt/openshift
      script:
        - oc login $OPENSHIFT_URL --token=$OPENSHIFT_TOKEN --insecure-skip-tls-verify=true
        - if [ ! -z "$TRAVIS_TAG" ]; then export PHASE=test; else PHASE=ci; fi
        - oc rollout latest ci-${PHASE} -n mydata
        - oc rollout latest operator-${PHASE} -n mydata
        - oc logout

# Flow control
stages:
  - name: lint
    # if: branch != master OR type = pull_request
    if: 1 = 0
  - name: end-2-end
    # if: branch != master OR type = pull_request
    if: 1 = 0
  - name: build
    if: 1 = 0
    # if: (branch = master AND type != pull_request) OR tag IS present
  - name: deploy
    if: (branch = master AND type != pull_request) OR tag IS present
