env:
  - DOCKER_COMPOSE_VERSION=1.23.2

jobs:
  include:
    # code linter
    - stage: "lint"
      name: "Code lint"
      language: node_js
      install:
        - npm run install-all
      test: skip
      script:
        - echo meow
        # - npm run lint-all

    # end-to-end tests
    - stage: "end-2-end"
      name: "End-to-end tests"
      language: node_js
      # cache:
      #   bundler: true
      #   directories:
      #     - node_modules
      #     - app/node_modules
      #     - examcples/cv/node_modules
      #     - operator/node_modules
      before_install:
        - sudo rm /usr/local/bin/docker-compose
        - curl -L https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-`uname -s`-`uname -m` > docker-compose
        - chmod +x docker-compose
        - sudo mv docker-compose /usr/local/bin
      install:
        - npm run install-all
      test:
        - "npm run test:e2e"

    # build docker image(s)
    - stage: build
      install: skip
      test:
        - docker login -u $DOCKER_USER -p $DOCKER_PASS
      services:
        - docker
      script:
        - docker build -t JobTechSwe/app app
        - docker push JobTechSwe/app
      script:
        - docker build -t JobTechSwe/cv examples/cv
        - docker push JobTechSwe/cv
      script:
        - docker build -t JobTechSwe/operator operator
        - docker push JobTechSwe/operator

    # update openshift DeployConfig(s)
    - stage: deploy
      install:
        - bash ./infrastructure/travis/install-openshift.sh
        - export PATH=$PATH:/tmp/openshift
      script: bash infrastructure/travis/deploy.sh

# Flow control
stages:
  - name: lint
    if: branch != master OR type = pull_request
  - name: end-2-end
    if: branch != master OR type = pull_request
  - name: build
    if: (branch = master AND type != pull_request) OR tag IS present
  - name: deploy
    if: (branch = master AND type != pull_request) OR tag IS present
